# LLM Response - code_generation_chunk_02_config
# Timestamp: 2025-06-09 13:44:05
# Model: claude-3-7-sonnet-20250219
# Interaction ID: code_generation_chunk_02_config_008
# ==================================================

server:
  port: 8081
  servlet:
    context-path: /mock-uidai

spring:
  application:
    name: mock-uidai-service
  datasource:
    url: jdbc:postgresql://localhost:5432/mock_uidai
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
  webflux:
    base-path: /mock-uidai

logging:
  level:
    root: INFO
    org.springframework: INFO
    com.mockuidai: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/mock-uidai-service.log
    max-size: 10MB
    max-history: 10

# Mock UIDAI Service Configuration
mock-uidai:
  auth:
    token-expiration: 3600000  # 1 hour in milliseconds
    secret-key: "mockUidaiSecretKey123456789012345678901234567890"
  rate-limit:
    enabled: true
    max-requests: 100
    time-window: 60000  # 1 minute in milliseconds
  data:
    seed-on-startup: true
  response:
    simulate-delay: false
    min-delay-ms: 100
    max-delay-ms: 500
  security:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true