# LLM Response - code_generation_chunk_03_remaining
# Timestamp: 2025-06-09 13:48:39
# Model: claude-3-7-sonnet-20250219
# Interaction ID: code_generation_chunk_03_remaining_024
# ==================================================

package com.mock.uidai.dto;

import java.io.Serializable;
import java.util.Objects;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.springframework.util.StringUtils;

/**
 * Data Transfer Object for OTP initiation request in the UIDAI mock service.
 * This class represents the request payload for initiating an OTP generation process.
 * It includes validation constraints to ensure data integrity.
 */
public class OtpInitiateRequestDto implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * The Aadhaar number for which OTP is to be generated.
     * Must be a 12-digit number.
     */
    @NotBlank(message = "Aadhaar number is required")
    @Size(min = 12, max = 12, message = "Aadhaar number must be 12 digits")
    @Pattern(regexp = "^[0-9]{12}$", message = "Aadhaar number must contain only digits")
    private String uidNumber;

    /**
     * The channel through which OTP will be delivered (SMS, EMAIL, etc.).
     */
    @NotBlank(message = "Channel is required")
    private String channel;

    /**
     * Transaction ID for tracking the OTP request.
     */
    private String txnId;

    /**
     * Default constructor.
     */
    public OtpInitiateRequestDto() {
    }

    /**
     * Parameterized constructor.
     *
     * @param uidNumber The Aadhaar number
     * @param channel   The delivery channel for OTP
     * @param txnId     The transaction ID
     */
    public OtpInitiateRequestDto(String uidNumber, String channel, String txnId) {
        this.uidNumber = uidNumber;
        this.channel = channel;
        this.txnId = txnId;
    }

    /**
     * Gets the Aadhaar number.
     *
     * @return The Aadhaar number
     */
    public String getUidNumber() {
        return uidNumber;
    }

    /**
     * Sets the Aadhaar number.
     *
     * @param uidNumber The Aadhaar number to set
     */
    public void setUidNumber(String uidNumber) {
        this.uidNumber = uidNumber;
    }

    /**
     * Gets the channel for OTP delivery.
     *
     * @return The channel
     */
    public String getChannel() {
        return channel;
    }

    /**
     * Sets the channel for OTP delivery.
     *
     * @param channel The channel to set
     */
    public void setChannel(String channel) {
        this.channel = channel;
    }

    /**
     * Gets the transaction ID.
     *
     * @return The transaction ID
     */
    public String getTxnId() {
        return txnId;
    }

    /**
     * Sets the transaction ID.
     *
     * @param txnId The transaction ID to set
     */
    public void setTxnId(String txnId) {
        this.txnId = txnId;
    }

    /**
     * Returns a masked representation of the UID number for logging purposes.
     *
     * @return Masked UID number
     */
    public String getMaskedUidNumber() {
        if (!StringUtils.hasText(uidNumber) || uidNumber.length() < 8) {
            return "INVALID-UID";
        }
        return "XXXXXXXX" + uidNumber.substring(uidNumber.length() - 4);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        OtpInitiateRequestDto that = (OtpInitiateRequestDto) o;
        return Objects.equals(uidNumber, that.uidNumber) &&
                Objects.equals(channel, that.channel) &&
                Objects.equals(txnId, that.txnId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(uidNumber, channel, txnId);
    }

    @Override
    public String toString() {
        return "OtpInitiateRequestDto{" +
                "uidNumber='" + getMaskedUidNumber() + '\'' +
                ", channel='" + channel + '\'' +
                ", txnId='" + txnId + '\'' +
                '}';
    }
}